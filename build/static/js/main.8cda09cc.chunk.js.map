{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/Header/Header.jsx","components/AddLog/AddLog.jsx","components/LogCard/LogCard.jsx","components/Loader/Loader.jsx","components/LogGallery/LogGallery.jsx","utils/logApi.js","utils/likesApi.js","pages/Feed/Feed.jsx","components/Profile/Profile.jsx","pages/Profile/Profile.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","tokenService","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","userService","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","getUser","logout","login","creds","headers","Headers","stringify","getProfile","username","Authorization","isPasswordMatch","passwordOne","passwordConf","SignUpPage","useState","message","passwordError","setError","email","password","state","setState","selectedFile","setSelectedFile","navigate","useNavigate","handleChange","e","target","name","value","a","preventDefault","key","formData","FormData","append","forEach","item","handleSignUpOrLogin","Segment","clearing","Header","as","color","floated","Image","src","size","Grid","textAlign","style","height","width","verticalAlign","Column","maxWidth","Form","onSubmit","stacked","Input","placeholder","onChange","required","type","Field","files","Button","fluid","Message","to","LoginPage","PageHeader","loggedUser","handleLogout","Icon","onClick","photoUrl","avatar","AddLog","handleAddLog","title","text","logForm","setLogForm","autoComplete","inline","TextArea","minHeight","label","margin","LogCard","isProfile","addLike","removeLike","likedIndex","likes","findIndex","like","likeColor","clickHandler","_id","Card","raised","Content","wrapped","ui","Description","extra","length","Loading","Loader","active","LogGallery","logs","numPhotosCol","loading","Group","itemsPerRow","stackable","Dimmer","inverted","map","create","err","getAll","logId","likeId","Feed","setLogs","setLoading","likesAPI","getLogs","logAPI","data","useEffect","centered","Row","Profile","columns","vertical","ProfilePage","profileUser","setProfileUser","useParams","useCallback","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8cda09cc.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nconst tokenService = {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};\n\nexport default tokenService;","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction getProfile(username){\n  console.log('getProfile calling')\n  return fetch(BASE_URL + username, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), \n    }\n  }).then(res => {\n    if(res.ok) return res.json();\n    throw new Error('Error from getProfile Request, check the server terminal!')\n  })\n}\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  }) \n  .then(res => {\n    if (res.ok) return res.json();\n\n\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.error)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  }) \n  .then(res => {\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.error)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nconst userService = {\n  signup, \n  getUser,\n  logout,\n  login,\n  getProfile\n};\n\nexport default userService;","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\n// Utility functions that don't pertain to the component can \n// be defined outside it\n\nfunction isPasswordMatch(passwordOne, passwordConf) {\n  return passwordOne === passwordConf;\n}\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: '',\n    passwordError: false\n  });\n\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  });\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  // initialized the react router hook, which allows you to programatically\n  // change routes, aka after our signup call in the handleSubmit\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // this stop the browser from submitting the form!\n\n    if (!isPasswordMatch(state.password, state.passwordConf)) return setError({ message: 'Passwords Must Match!', passwordError: true });\n    setError({ message: '', passwordError: false })\n    // Create formData, so we can send over our file, using multipart/formdata header\n    // which sends over the basic inputs, and then the file\n\n    const formData = new FormData(); //< - this constructor from the browser allows us to create data\n    // now we can set key value pairs on the formData\n    formData.append(\"photo\", selectedFile);\n    // Line by line tactic\n    // formData.append('username', state.username);\n    // formData.append('email', state.email);\n    // and so on for the rest or our state\n\n    // A more robust way to generate the rest of the formData is using a loop!\n    // loop over our state object using a for ... in loop\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n\n    console.log(\n      formData,\n      \" <- form Data, you cant see this!\",\n      \"you have to loop over it\"\n    );\n    console.log(\n      formData.forEach((item) => console.log(item)),\n      \" < This lets you see the key values in formData\"\n    );\n\n    try {\n      await userService.signup(formData);\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n      setError({ message: err.message, passwordError: false });\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  return (\n    <>\n      <Segment clearing>\n        <Header as=\"h2\" color='blue' floated=\"left\">\n          <Image src=\"https://cdn-icons-png.flaticon.com/512/744/744502.png\" size='small' />\n          Welcome to Travelog. Plan, record and share your trips.\n        </Header>\n      </Segment>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\", width: \"100vw\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h3\" color=\"blue\" textAlign=\"center\">\n            Sign Up\n          </Header>\n          <Form onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                name=\"username\"\n                placeholder=\"username\"\n                value={state.username}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                error={error.passwordError}\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                error={error.passwordError}\n                name=\"passwordConf\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={state.passwordConf}\n                onChange={handleChange}\n                required\n              />\n              <Form.Field>\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileInput}\n                />\n              </Form.Field>\n              <Button color=\"blue\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\">\n                Sign up\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            Already have an account? <Link to=\"/login\">Log In</Link>\n          </Message>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      // this is from the throw block in the userService.login first then function\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Segment clearing>\n        <Header as=\"h2\" color='blue' floated=\"left\">\n          <Image src=\"https://cdn-icons-png.flaticon.com/512/744/744502.png\" size='small' />\n          Welcome to Travelog. Plan, record and share your trips.\n        </Header>\n      </Segment>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\", width: \"100vw\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n            Log in\n          </Header>\n          <Form onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"blue\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Log in\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to=\"/signup\">Create your account</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Header, Segment, Image, Icon} from 'semantic-ui-react';\n\nexport default function PageHeader({ loggedUser, handleLogout }) {\n    console.log(loggedUser, \"loggedUser in pageheader\");\n    return (\n        <Segment clearing>\n            <Header as=\"h3\" color='red' floated=\"right\">\n                <Link to=\"/\">\n                    <Icon name=\"home\"></Icon>\n                </Link>\n                <Link to=\"/login\" onClick={handleLogout}>\n                    Log Out\n                </Link>\n            </Header>\n            <Header as=\"h3\" color='blue' floated=\"left\">\n                <Link to={`/${loggedUser?.username}`}>\n                    <Image\n                        src={\n                            loggedUser?.photoUrl\n                                ? loggedUser?.photoUrl\n                                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                        }\n                        avatar\n                    ></Image>\n                </Link>\n                <span>Welcome, {loggedUser.username} </span>\n            </Header>\n        </Segment>\n    )\n}","import React, { useState } from 'react';\nimport { Button, Form, TextArea, Segment, Header } from 'semantic-ui-react';\n\n\nexport default function AddLog({handleAddLog}) {\n    const [logForm, setLogForm] = useState({\n        title: \"\",\n        text: \"\"\n    });\n    // The function that handles the changes on the input, Look at the inputs for the name of it\n    const [selectedFile, setSelectedFile] = useState(\"\");\n\n    function handleFileInput(e) {\n        console.log(e.target.files, \" < - this is e.target.files\");\n        setSelectedFile(e.target.files[0]);\n    }\n\n    function handleChange(e) {\n        setLogForm({\n            ...logForm,\n            [e.target.name]: e.target.value,\n        });\n        console.log(logForm, '<-this is logForm')\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append(\"photo\", selectedFile);\n        formData.append(\"title\", logForm.title);\n        formData.append(\"text\", logForm.text);\n        console.log(formData,'<-this is formData');\n        handleAddLog(formData); // formData is the data we want to send to the server!\n    }\n\n    return (\n        <Segment>\n            <Header as=\"h2\" color='blue' floated=\"left\">\n                Plan, record and share your trips.\n            </Header>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Form.Input\n                    className=\"form-control\"\n                    name=\"title\"\n                    value={logForm.title}\n                    placeholder=\"Enter title\"\n                    style={{ width: 542 }}\n                    onChange={handleChange}\n                    inline\n                    required\n                />\n                <TextArea\n                    className=\"form-control\"\n                    name=\"text\"\n                    value={logForm.text}\n                    placeholder=\"Tell us more about your trip\"\n                    style={{ minHeight: 200 }}\n                    onChange={handleChange}\n                    inline\n                    required\n                />\n                <Form.Input\n                    className=\"form-control\"\n                    type=\"file\"\n                    name=\"photo\"\n                    label=\"Upload Image\"\n                    placeholder=\"upload image\"\n                    style={{ width: 405, margin: 14 }}\n                    onChange={handleFileInput}\n                    inline\n                    required\n                />\n                <Button\n                    color=\"blue\"\n                    fluid\n                    size=\"large\"\n                    type=\"submit\"\n                    className=\"btn\"\n                >\n                    Add a trip\n                </Button>\n            </Form>\n        </Segment >\n    )\n}","import React from 'react';\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LogCard({ log, isProfile, addLike, removeLike, loggedUser }) {\n    //check if logged in user have liked the post\n    const likedIndex = log.likes.findIndex(\n        (like) => like.username === loggedUser.username\n    );\n    const likeColor = likedIndex > -1 ? \"red\" : \"grey\";\n    const clickHandler =\n        likedIndex > -1\n            ? () => removeLike(log.likes[likedIndex]._id) // user has liked the log \n            : () => addLike(log._id);  // user hasn't liked the log handler\n\n    return (\n        <Card key={log._id} raised>\n            {isProfile ? (\n                \"\"\n            ) : (\n                <Card.Content textAlign=\"left\">\n                    <Card.Header>\n                        <Link to={`/${log.user.username}`}>\n                            <Image\n                                size=\"large\"\n                                avatar\n                                src={\n                                    log.user.photoUrl\n                                        ? log.user.photoUrl\n                                        : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                                }\n                            />\n                            {log.user.username}\n                        </Link>\n                    </Card.Header>\n                </Card.Content>\n            )}\n            <Image src={`${log?.photoUrl}`} wrapped ui={false} />\n            <Card.Content>\n                {/* <Card.Description>{log.title}</Card.Description> */}\n                <Card.Description>{log.text}</Card.Description>\n            </Card.Content>\n            <Card.Content extra textAlign={\"right\"}>\n                <Icon\n                    name={\"heart\"}\n                    size=\"large\"\n                    color={likeColor}\n                    onClick={clickHandler}\n                />\n                {log.likes.length}\n            </Card.Content>\n        </Card>\n    );\n}","import { Loader } from 'semantic-ui-react'\n\nexport default function Loading() {\n    return (\n        <Loader size=\"medium\" active>\n            Loading\n        </Loader>\n    );\n}","import React from 'react';\nimport { Card, Dimmer, Segment, Image } from 'semantic-ui-react'\nimport LogCard from '../LogCard/LogCard';\nimport Loader from '../Loader/Loader';\n\nexport default function LogGallery({ logs, numPhotosCol, isProfile, loading, addLike, removeLike, loggedUser }) {\n    return (\n        <Card.Group itemsPerRow={numPhotosCol} stackable>\n            {loading ? (\n                <Segment>\n                    <Dimmer active inverted>\n                        <Loader size=\"medium\">Loading</Loader>\n                    </Dimmer>\n                    <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Segment>\n            ) : null}\n            {logs.map((log) => {\n                return (\n                    <LogCard\n                        log={log}\n                        key={log._id}\n                        isProfile={isProfile}\n                        addLike={addLike}\n                        removeLike={removeLike}\n                        loggedUser={loggedUser}\n                    />\n                );\n            })}\n        </Card.Group>\n    )\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/logs\";\n\nexport function create(log) {\n    return fetch(BASE_URL, {\n        method: \"POST\",\n        body: log,\n        headers: {\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        return res.json().then(response => {\n            console.log(response);\n            throw new Error(response.err)\n        })\n    });\n}\n\nexport function getAll() {\n    return fetch(BASE_URL, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    })\n        .then((res) => {\n            if (res.ok) return res.json();\n            return res.json().then(response => {\n                console.log(response)\n                throw new Error(response.err)\n            })\n        });\n}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/\";\n\nexport function create(logId) {\n    return fetch(`${BASE_URL}logs/${logId}/likes`, {\n        method: \"POST\",\n        headers: {\n            Authorization: \"Bearer \" + tokenService.getToken(), \n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(res.error);\n    });\n}\n\nexport function removeLike(likeId) {\n    return fetch(`${BASE_URL}likes/${likeId}`, {\n        method: \"DELETE\",\n        headers: {\n            Authorization: \"Bearer \" + tokenService.getToken(), \n        }\n    }).then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(res.error);\n    });\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./Feed.css\";\n\nimport PageHeader from \"../../components/Header/Header\";\nimport AddLog from \"../../components/AddLog/AddLog\";\nimport LogGallery from \"../../components/LogGallery/LogGallery\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport Loading from \"../../components/Loader/Loader\";\n\nimport * as logAPI from \"../../utils/logApi\";\nimport * as likesAPI from \"../../utils/likesApi\";\n\n\nexport default function Feed({ loggedUser, handleLogout }) {\n    const [logs, setLogs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    // functions that will make http request to the /logs/api endpoints\n    async function addLike(logId) {\n        try {\n            const response = await likesAPI.create(logId);\n            console.log(response, \"from add like\");\n            getLogs();\n        } catch (err) {\n            console.log(err, \" err from server\");\n            setError(\"error adding like\");\n        }\n    }\n\n    async function removeLike(likeId) {\n        try {\n            const response = await likesAPI.removeLike(likeId);\n            console.log(response, \" remove like\");\n            getLogs();\n        } catch (err) {\n            console.log(err);\n            setError(\"error removing like\");\n        }\n    }\n\n    async function handleAddLog(log) {\n        try {\n            setLoading(true);\n            const response = await logAPI.create(log);\n            console.log(response);\n            setLogs([response.data, ...logs]);\n            setLoading(false);\n        } catch (err) {\n            console.log(err.message);\n            setError(\"Error creating log, please try again\");\n        }\n    }\n\n    async function getLogs() {\n        try {\n            const response = await logAPI.getAll();\n            console.log(response, \" data\");\n            setLogs([...response.data]);\n            setLoading(false);\n        } catch (err) {\n            console.log(err.message, \" this is the error\");\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        getLogs();\n    }, []);\n\n    if (error) {\n        return (\n            <>\n                <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                <ErrorMessage error={error} />;\n            </>\n        );\n    }\n    if (loading) {\n        return (\n            <>\n                <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                <Loading />\n            </>\n        );\n    }\n    return (\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 600 }}>\n                    <AddLog handleAddLog={handleAddLog} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 600 }}>\n                    <LogGallery\n                        logs={logs}\n                        numPhotosCol={1}\n                        isProfile={false}\n                        loading={loading}\n                        addLike={addLike}\n                        removeLike={removeLike}\n                        loggedUser={loggedUser}\n                    />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}","import { Image, Grid, Segment } from \"semantic-ui-react\";\n\nexport default function Profile({ user }) {\n    return (\n        <Grid textAlign=\"center\" columns={2}>\n            <Grid.Row>\n                <Grid.Column>\n                    <Image\n                        src={`${user.photoUrl\n                                ? user.photoUrl\n                                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                            } `}\n                        avatar\n                        size=\"small\"\n                    />\n                </Grid.Column>\n                <Grid.Column textAlign=\"left\" style={{ maxWidth: 600 }}>\n                    <Segment vertical>\n                        <h4>{user.username}</h4>\n                    </Segment>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport Profile from \"../../components/Profile/Profile\";\nimport LogGallery from \"../../components/LogGallery/LogGallery\";\nimport Header from \"../../components/Header/Header\";\nimport Loading from \"../../components/Loader/Loader\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\nimport userService from \"../../utils/userService\";\nimport * as likesAPI from \"../../utils/likesApi\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function ProfilePage({ loggedUser, handleLogout }) {\n    const [logs, setLogs] = useState([]);\n    const [profileUser, setProfileUser] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const { username } = useParams();\n\n    async function addLike(logId) {\n        try {\n            const response = await likesAPI.create(logId);\n            console.log(response, \"from add like\");\n            getProfile();\n        } catch (err) {\n            console.log(err, \" err from server\");\n        }\n    }\n\n    async function removeLike(likeId) {\n        try {\n            const response = await likesAPI.removeLike(likeId);\n            console.log(response, \" remove like\");\n            getProfile();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const getProfile = useCallback(async () => {\n        try {\n            const response = await userService.getProfile(username); // this line evaluates to what the server responds to the request with\n            // after we get the response to the server\n            // so lets flip the loading state\n            setLoading(false);\n            setProfileUser(response.data.user);\n            setLogs(response.data.logs);\n            console.log(response);\n        } catch (err) {\n            console.log(err.message);\n            setError(\"Profile does not exist! You are in the wrong in place\");\n        }\n    }, [username]);\n\n    useEffect(() => {\n        console.log(\"firing!\");\n        getProfile();\n    }, [username, getProfile]);\n\n    if (error) {\n        return (\n            <>\n                <Header handleLogout={handleLogout} loggedUser={loggedUser} />\n                <ErrorMessage error={error} />;\n            </>\n        );\n    }\n\n    if (loading) {\n        return (\n            <>\n                <Header handleLogout={handleLogout} loggedUser={loggedUser} />\n                <Loading />\n            </>\n        );\n    }\n\n    return (\n        <Grid>\n            <Grid.Row>\n                <Grid.Column>\n                    <Header handleLogout={handleLogout} loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <Profile user={profileUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row centered>\n                <Grid.Column style={{ maxWidth: 900 }}>\n                    <LogGallery\n                        logs={logs}\n                        numPhotosCol={3}\n                        isProfile={true}\n                        loading={loading}\n                        addLike={addLike}\n                        removeLike={removeLike}\n                        loggedUser={loggedUser}\n                    />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport Feed from \"../Feed/Feed\";\nimport ProfilePage from \"../Profile/Profile\";\nimport userService from \"../../utils/userService\";\n\nexport default function App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n\n  if (user) {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Feed loggedUser={user} handleLogout={handleLogout} />} />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/:username\"\n          element={<ProfilePage loggedUser={user} handleLogout={handleLogout} />}\n        />\n      </Routes>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}